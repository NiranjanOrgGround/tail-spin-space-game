name: TailSpin Spacegame Web App ðŸš€

on:
    # push:
    # pull_request:
    workflow_dispatch:

jobs:
    build_web_app:
        name: Build Web App
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            
            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '3.1.x'

            # - uses: actions/cache@v3
            #   with:
            #     path: |
            #       ~/.nuget/packages
            #       !~/.nuget/packages/unwanted
            #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            #     restore-keys: |
            #       ${{ runner.os }}-nuget-

            - name: Install Dependencies
              run: dotnet restore
              working-directory: ./Tailspin.SpaceGame.Web

            - name: Build
              run: dotnet build --configuration Release --no-restore
              working-directory: ./Tailspin.SpaceGame.Web

            - name: ðŸ“¦ Publish
              run: dotnet publish --configuration Release --no-build
              working-directory: ./Tailspin.SpaceGame.Web

            - name: ðŸ“¤ Upload Build Artifact
              uses: actions/upload-artifact@v3
              with:
                name: spacegame-artifact
                path: ./Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish/
                
    analyze:
        name: Analyze
        runs-on: ubuntu-latest
        needs: build_web_app

        strategy:
            fail-fast: false
            matrix:
                language: [ 'csharp', 'javascript' ]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                languages: ${{ matrix.language }}

            - name: Autobuild
              uses: github/codeql-action/autobuild@v2

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2

    deploy_to_pre-prod:
        name: Deploy to Pre-Production
        runs-on: ubuntu-latest
        environment: Pre-Prod
        needs: analyze

        steps:
            - name: Downloading the artifacts
              uses: actions/download-artifact@v3
              with:
                  name: spacegame-artifact

    deploy_to_prod:
        name: Deploy to Production
        runs-on: ubuntu-latest
        environment: prod
        needs: deploy_to_pre-prod

        steps:
            - name: Downloading the artifacts
              uses: actions/download-artifact@v3
              with:
                  name: spacegame-artifact
